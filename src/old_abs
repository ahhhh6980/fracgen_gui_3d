/*
    Copyright (C) 2022  Shelby Lynn B.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
let response = ui.vertical(|ui| {
                                                            ui.horizontal(|ui| {
                                                                ui.add_space(16.0);

                                                                ui.label("Enable/abs RE/abs IM");
                                                            });
                                                            ui.horizontal(|ui| {
                                                                ui.add_space(16.0);

                                                                let response = ui.add_sized(
                                                                    (16.0, 16.0),
                                                                    egui::Checkbox::new(
                                                                        &mut self
                                                                            .viewport
                                                                            .renderer
                                                                            .args
                                                                            .z_offsets[row]
                                                                            .0
                                                                             .1,
                                                                        "",
                                                                    ),
                                                                );
                                                                pressed |= response.changed();

                                                                let response = ui.add_sized(
                                                                    (16.0, 16.0),
                                                                    egui::Checkbox::new(
                                                                        &mut self
                                                                            .viewport
                                                                            .renderer
                                                                            .args
                                                                            .z_offsets[row]
                                                                            .1[0],
                                                                        "",
                                                                    ),
                                                                );
                                                                pressed |= response.changed();

                                                                let response = ui.add_sized(
                                                                    (16.0, 16.0),
                                                                    egui::Checkbox::new(
                                                                        &mut self
                                                                            .viewport
                                                                            .renderer
                                                                            .args
                                                                            .z_offsets[row]
                                                                            .1[1],
                                                                        "",
                                                                    ),
                                                                );
                                                                pressed |= response.changed();
                                                            });
                                                            ui.horizontal(|ui| {
                                                                ui.add_space(8.0);
                                                                ui.label(format!(
                                                                    "Z Offset {}: ",
                                                                    row
                                                                ));
                                                                let response = ui.add_sized(
                                                                    (ui.available_width(), 16.0),
                                                                    egui::DragValue::new(
                                                                        &mut self
                                                                            .viewport
                                                                            .renderer
                                                                            .args
                                                                            .z_offsets[row]
                                                                            .0
                                                                             .0
                                                                            .re,
                                                                    )
                                                                    .speed(
                                                                        self.input_menu.julia_speed,
                                                                    ),
                                                                );

                                                                pressed |= response.changed();
                                                            });

                                                            ui.horizontal(|ui| {
                                                                ui.add_space(8.0);
                                                                ui.label(format!(
                                                                    "Z Offset {}: ",
                                                                    row
                                                                ));
                                                                let response = ui.add(
                                                                    egui::DragValue::new(
                                                                        &mut self
                                                                            .viewport
                                                                            .renderer
                                                                            .args
                                                                            .z_offsets[row]
                                                                            .0
                                                                             .0
                                                                            .im,
                                                                    )
                                                                    .speed(
                                                                        self.input_menu.julia_speed,
                                                                    ),
                                                                );
                                                                pressed |= response.changed();
                                                            });
                                                            ui.horizontal(|ui| {
                                                                ui.add_space(16.0);

                                                                ui.label("Enable/Before offset");
                                                            });
                                                            ui.horizontal(|ui| {
                                                                ui.add_space(16.0);

                                                                let response =
                                                                    ui.add(egui::Checkbox::new(
                                                                        &mut self
                                                                            .viewport
                                                                            .renderer
                                                                            .args
                                                                            .z_rotations[row]
                                                                            .1,
                                                                        "",
                                                                    ));
                                                                pressed |= response.changed();
                                                            });
                                                            ui.horizontal(|ui| {
                                                                ui.add_space(8.0);
                                                                ui.label(format!(
                                                                    "Z Rotation Angle {}: ",
                                                                    row
                                                                ));
                                                                let response = ui.add(
                                                                    egui::DragValue::new(
                                                                        &mut self
                                                                            .viewport
                                                                            .renderer
                                                                            .args
                                                                            .z_rotations[row]
                                                                            .0,
                                                                    )
                                                                    .speed(
                                                                        self.input_menu.julia_speed,
                                                                    ),
                                                                );
                                                                pressed |= response.changed();
                                                            });
                                                            println!(
                                                                "ok; {}",
                                                                ui.style().spacing.item_spacing.y
                                                            );
                                                            ui.add_space(4.0);
                                                            ui.separator();
                                                            // ui.allocate_response(desired_size, sense)
                                                        });
                                                        // .response;
